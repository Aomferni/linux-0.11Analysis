!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACC_MODE	fs/namei.c	/^#define ACC_MODE(/;"	d	file:
AR	fs/Makefile	/^AR	=gar$/;"	m
AR	kernel/Makefile	/^AR	=gar$/;"	m
AR	lib/Makefile	/^AR	=gar$/;"	m
AR	mm/Makefile	/^AR	=gar$/;"	m
ARCHIVES	Makefile	/^ARCHIVES=kernel\/kernel.o mm\/mm.o fs\/fs.o$/;"	m
AS	Makefile	/^AS	=gas$/;"	m
AS	fs/Makefile	/^AS	=gas$/;"	m
AS	kernel/Makefile	/^AS	=gas$/;"	m
AS	lib/Makefile	/^AS	=gas$/;"	m
AS	mm/Makefile	/^AS	=gas$/;"	m
AS86	Makefile	/^AS86	=as86 -0 -a$/;"	m
B0	include/termios.h	/^#define  B0	/;"	d
B110	include/termios.h	/^#define  B110	/;"	d
B1200	include/termios.h	/^#define  B1200	/;"	d
B134	include/termios.h	/^#define  B134	/;"	d
B150	include/termios.h	/^#define  B150	/;"	d
B1800	include/termios.h	/^#define  B1800	/;"	d
B19200	include/termios.h	/^#define  B19200	/;"	d
B200	include/termios.h	/^#define  B200	/;"	d
B2400	include/termios.h	/^#define  B2400	/;"	d
B300	include/termios.h	/^#define  B300	/;"	d
B38400	include/termios.h	/^#define  B38400	/;"	d
B4800	include/termios.h	/^#define  B4800	/;"	d
B50	include/termios.h	/^#define  B50	/;"	d
B600	include/termios.h	/^#define  B600	/;"	d
B75	include/termios.h	/^#define  B75	/;"	d
B9600	include/termios.h	/^#define  B9600	/;"	d
BADNESS	fs/buffer.c	/^#define BADNESS(/;"	d	file:
BCD_TO_BIN	init/main.c	/^#define BCD_TO_BIN(/;"	d	file:
BOOTSEG	boot/bootsect.s	/^BOOTSEG  = 0x07c0			! original address of boot-sector$/;"	d
BRKINT	include/termios.h	/^#define BRKINT	/;"	d
BS0	include/termios.h	/^#define   BS0	/;"	d
BS1	include/termios.h	/^#define   BS1	/;"	d
BSDLY	include/termios.h	/^#define BSDLY	/;"	d
BUFFER_END	include/const.h	/^#define BUFFER_END /;"	d
CBAUD	include/termios.h	/^#define CBAUD	/;"	d
CC	Makefile	/^CC	=gcc $(RAMDISK)$/;"	m
CC	fs/Makefile	/^CC	=gcc$/;"	m
CC	kernel/Makefile	/^CC	=gcc$/;"	m
CC	lib/Makefile	/^CC	=gcc$/;"	m
CC	mm/Makefile	/^CC	=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer \\$/;"	m
CFLAGS	fs/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m
CFLAGS	kernel/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	lib/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	mm/Makefile	/^CFLAGS	=-O -Wall -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m
CIBAUD	include/termios.h	/^#define CIBAUD	/;"	d
CLOCAL	include/termios.h	/^#define CLOCAL	/;"	d
CLOCKS_PER_SEC	include/time.h	/^#define CLOCKS_PER_SEC /;"	d
CMOS_READ	init/main.c	/^#define CMOS_READ(/;"	d	file:
CODE_SPACE	mm/memory.c	/^#define CODE_SPACE(/;"	d	file:
COPYBLK	fs/buffer.c	/^#define COPYBLK(/;"	d	file:
CPARENB	include/termios.h	/^#define CPARENB	/;"	d
CPARODD	include/termios.h	/^#define CPARODD	/;"	d
CPP	Makefile	/^CPP	=cpp -nostdinc -Iinclude$/;"	m
CPP	fs/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	kernel/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	lib/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	mm/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CR0	include/termios.h	/^#define   CR0	/;"	d
CR1	include/termios.h	/^#define   CR1	/;"	d
CR2	include/termios.h	/^#define   CR2	/;"	d
CR3	include/termios.h	/^#define   CR3	/;"	d
CRDLY	include/termios.h	/^#define CRDLY	/;"	d
CREAD	include/termios.h	/^#define CREAD	/;"	d
CRTSCTS	include/termios.h	/^#define CRTSCTS	/;"	d
CS	kernel/system_call.s	/^CS		= 0x20$/;"	d
CS5	include/termios.h	/^#define   CS5	/;"	d
CS6	include/termios.h	/^#define   CS6	/;"	d
CS7	include/termios.h	/^#define   CS7	/;"	d
CS8	include/termios.h	/^#define   CS8	/;"	d
CSIZE	include/termios.h	/^#define CSIZE	/;"	d
CSTOPB	include/termios.h	/^#define CSTOPB	/;"	d
DAY	kernel/mktime.c	/^#define DAY /;"	d	file:
DEFAULT_MAJOR_ROOT	tools/build.c	/^#define DEFAULT_MAJOR_ROOT /;"	d	file:
DEFAULT_MINOR_ROOT	tools/build.c	/^#define DEFAULT_MINOR_ROOT /;"	d	file:
DRIVERS	Makefile	/^DRIVERS =kernel\/blk_drv\/blk_drv.a kernel\/chr_drv\/chr_drv.a$/;"	m
DRIVE_INFO	init/main.c	/^#define DRIVE_INFO /;"	d	file:
DS	kernel/system_call.s	/^DS		= 0x18$/;"	d
E2BIG	include/errno.h	/^#define E2BIG	/;"	d
EACCES	include/errno.h	/^#define EACCES	/;"	d
EAGAIN	include/errno.h	/^#define EAGAIN	/;"	d
EAX	kernel/system_call.s	/^EAX		= 0x00$/;"	d
EBADF	include/errno.h	/^#define EBADF	/;"	d
EBUSY	include/errno.h	/^#define EBUSY	/;"	d
EBX	kernel/system_call.s	/^EBX		= 0x04$/;"	d
ECHILD	include/errno.h	/^#define ECHILD	/;"	d
ECHO	include/termios.h	/^#define ECHO	/;"	d
ECHOCTL	include/termios.h	/^#define ECHOCTL	/;"	d
ECHOE	include/termios.h	/^#define ECHOE	/;"	d
ECHOK	include/termios.h	/^#define ECHOK	/;"	d
ECHOKE	include/termios.h	/^#define ECHOKE	/;"	d
ECHONL	include/termios.h	/^#define ECHONL	/;"	d
ECHOPRT	include/termios.h	/^#define ECHOPRT	/;"	d
ECX	kernel/system_call.s	/^ECX		= 0x08$/;"	d
EDEADLK	include/errno.h	/^#define EDEADLK	/;"	d
EDOM	include/errno.h	/^#define EDOM	/;"	d
EDX	kernel/system_call.s	/^EDX		= 0x0C$/;"	d
EEXIST	include/errno.h	/^#define EEXIST	/;"	d
EFAULT	include/errno.h	/^#define EFAULT	/;"	d
EFBIG	include/errno.h	/^#define EFBIG	/;"	d
EFLAGS	kernel/system_call.s	/^EFLAGS		= 0x24$/;"	d
EINTR	include/errno.h	/^#define EINTR	/;"	d
EINVAL	include/errno.h	/^#define EINVAL	/;"	d
EIO	include/errno.h	/^#define EIO	/;"	d
EIP	kernel/system_call.s	/^EIP		= 0x1C$/;"	d
EISDIR	include/errno.h	/^#define EISDIR	/;"	d
EMFILE	include/errno.h	/^#define EMFILE	/;"	d
EMLINK	include/errno.h	/^#define EMLINK	/;"	d
ENAMETOOLONG	include/errno.h	/^#define ENAMETOOLONG	/;"	d
ENDSEG	boot/bootsect.s	/^ENDSEG   = SYSSEG + SYSSIZE		! where to stop loading$/;"	d
ENFILE	include/errno.h	/^#define ENFILE	/;"	d
ENODEV	include/errno.h	/^#define ENODEV	/;"	d
ENOENT	include/errno.h	/^#define ENOENT	/;"	d
ENOEXEC	include/errno.h	/^#define ENOEXEC	/;"	d
ENOLCK	include/errno.h	/^#define ENOLCK	/;"	d
ENOMEM	include/errno.h	/^#define ENOMEM	/;"	d
ENOSPC	include/errno.h	/^#define ENOSPC	/;"	d
ENOSYS	include/errno.h	/^#define ENOSYS	/;"	d
ENOTBLK	include/errno.h	/^#define ENOTBLK	/;"	d
ENOTDIR	include/errno.h	/^#define ENOTDIR	/;"	d
ENOTEMPTY	include/errno.h	/^#define ENOTEMPTY	/;"	d
ENOTTY	include/errno.h	/^#define ENOTTY	/;"	d
ENXIO	include/errno.h	/^#define ENXIO	/;"	d
EPERM	include/errno.h	/^#define EPERM	/;"	d
EPIPE	include/errno.h	/^#define EPIPE	/;"	d
ERANGE	include/errno.h	/^#define ERANGE	/;"	d
EROFS	include/errno.h	/^#define EROFS	/;"	d
ERROR	include/errno.h	/^#define ERROR	/;"	d
ES	kernel/system_call.s	/^ES		= 0x14$/;"	d
ESPIPE	include/errno.h	/^#define ESPIPE	/;"	d
ESRCH	include/errno.h	/^#define ESRCH	/;"	d
ETXTBSY	include/errno.h	/^#define ETXTBSY	/;"	d
EXDEV	include/errno.h	/^#define EXDEV	/;"	d
EXTA	include/termios.h	/^#define EXTA /;"	d
EXTB	include/termios.h	/^#define EXTB /;"	d
EXT_MEM_K	init/main.c	/^#define EXT_MEM_K /;"	d	file:
FD_CLOEXEC	include/fcntl.h	/^#define FD_CLOEXEC	/;"	d
FF0	include/termios.h	/^#define   FF0	/;"	d
FF1	include/termios.h	/^#define   FF1	/;"	d
FFDLY	include/termios.h	/^#define FFDLY	/;"	d
FLUSHO	include/termios.h	/^#define FLUSHO	/;"	d
FS	kernel/system_call.s	/^FS		= 0x10$/;"	d
F_DUPFD	include/fcntl.h	/^#define F_DUPFD	/;"	d
F_GETFD	include/fcntl.h	/^#define F_GETFD	/;"	d
F_GETFL	include/fcntl.h	/^#define F_GETFL	/;"	d
F_GETLK	include/fcntl.h	/^#define F_GETLK	/;"	d
F_OK	include/unistd.h	/^#define F_OK	/;"	d
F_RDLCK	include/fcntl.h	/^#define F_RDLCK	/;"	d
F_SETFD	include/fcntl.h	/^#define F_SETFD	/;"	d
F_SETFL	include/fcntl.h	/^#define F_SETFL	/;"	d
F_SETLK	include/fcntl.h	/^#define F_SETLK	/;"	d
F_SETLKW	include/fcntl.h	/^#define F_SETLKW	/;"	d
F_UNLCK	include/fcntl.h	/^#define F_UNLCK	/;"	d
F_WRLCK	include/fcntl.h	/^#define F_WRLCK	/;"	d
GCC_HEADER	tools/build.c	/^#define GCC_HEADER /;"	d	file:
HIGH_MEMORY	mm/memory.c	/^static long HIGH_MEMORY = 0;$/;"	v	file:
HOUR	kernel/mktime.c	/^#define HOUR /;"	d	file:
HUPCL	include/termios.h	/^#define HUPCL	/;"	d
ICANON	include/termios.h	/^#define ICANON	/;"	d
ICRNL	include/termios.h	/^#define ICRNL	/;"	d
IEXTEN	include/termios.h	/^#define IEXTEN	/;"	d
IGNBRK	include/termios.h	/^#define IGNBRK	/;"	d
IGNCR	include/termios.h	/^#define IGNCR	/;"	d
IGNPAR	include/termios.h	/^#define IGNPAR	/;"	d
IMAXBEL	include/termios.h	/^#define IMAXBEL	/;"	d
INITSEG	boot/bootsect.s	/^INITSEG  = 0x9000			! we move boot here - out of the way$/;"	d
INITSEG	boot/setup.s	/^INITSEG  = 0x9000	! we move boot here - out of the way$/;"	d
INLCR	include/termios.h	/^#define INLCR	/;"	d
INPCK	include/termios.h	/^#define INPCK	/;"	d
ISIG	include/termios.h	/^#define ISIG	/;"	d
ISTRIP	include/termios.h	/^#define ISTRIP	/;"	d
IUCLC	include/termios.h	/^#define IUCLC	/;"	d
IXANY	include/termios.h	/^#define IXANY	/;"	d
IXOFF	include/termios.h	/^#define IXOFF	/;"	d
IXON	include/termios.h	/^#define IXON	/;"	d
I_BLOCK_SPECIAL	include/const.h	/^#define I_BLOCK_SPECIAL /;"	d
I_CHAR_SPECIAL	include/const.h	/^#define I_CHAR_SPECIAL /;"	d
I_DIRECTORY	include/const.h	/^#define I_DIRECTORY	/;"	d
I_NAMED_PIPE	include/const.h	/^#define I_NAMED_PIPE	/;"	d
I_REGULAR	include/const.h	/^#define I_REGULAR /;"	d
I_SET_GID_BIT	include/const.h	/^#define I_SET_GID_BIT /;"	d
I_SET_UID_BIT	include/const.h	/^#define I_SET_UID_BIT /;"	d
I_TYPE	include/const.h	/^#define I_TYPE /;"	d
L6	boot/head.s	/^L6:$/;"	l
LATCH	kernel/sched.c	/^#define LATCH /;"	d	file:
LD	Makefile	/^LD	=gld$/;"	m
LD	fs/Makefile	/^LD	=gld$/;"	m
LD	kernel/Makefile	/^LD	=gld$/;"	m
LD	lib/Makefile	/^LD	=gld$/;"	m
LD	mm/Makefile	/^LD	=gld$/;"	m
LD86	Makefile	/^LD86	=ld86 -0$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	=-s -x -M$/;"	m
LDFLAGS	kernel/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDFLAGS	lib/Makefile	/^LDFLAGS	=-s -x$/;"	m
LEFT	kernel/vsprintf.c	/^#define LEFT	/;"	d	file:
LIBS	Makefile	/^LIBS	=lib\/lib.a$/;"	m
LOW_MEM	mm/memory.c	/^#define LOW_MEM /;"	d	file:
MAP_NR	mm/memory.c	/^#define MAP_NR(/;"	d	file:
MATH	Makefile	/^MATH	=kernel\/math\/math.a$/;"	m
MAX	fs/file_dev.c	/^#define MAX(/;"	d	file:
MAX_ARG_PAGES	fs/exec.c	/^#define MAX_ARG_PAGES /;"	d	file:
MAY_EXEC	fs/namei.c	/^#define MAY_EXEC /;"	d	file:
MAY_READ	fs/namei.c	/^#define MAY_READ /;"	d	file:
MAY_WRITE	fs/namei.c	/^#define MAY_WRITE /;"	d	file:
MIN	fs/file_dev.c	/^#define MIN(/;"	d	file:
MINIX_HEADER	tools/build.c	/^#define MINIX_HEADER /;"	d	file:
MINUTE	kernel/mktime.c	/^#define MINUTE /;"	d	file:
NCC	include/termios.h	/^#define NCC /;"	d
NCCS	include/termios.h	/^#define NCCS /;"	d
NL0	include/termios.h	/^#define   NL0	/;"	d
NL1	include/termios.h	/^#define   NL1	/;"	d
NLDLY	include/termios.h	/^#define NLDLY	/;"	d
NMAGIC	include/a.out.h	/^#define NMAGIC /;"	d
NOFLSH	include/termios.h	/^#define NOFLSH	/;"	d
NRDEVS	fs/char_dev.c	/^#define NRDEVS /;"	d	file:
NRDEVS	fs/ioctl.c	/^#define NRDEVS /;"	d	file:
NR_BUFFERS	fs/buffer.c	/^int NR_BUFFERS = 0;$/;"	v
NSIG	include/signal.h	/^#define NSIG	/;"	d
NULL	include/stddef.h	/^#define NULL /;"	d
NULL	include/stddef.h	/^#undef NULL$/;"	d
NULL	include/string.h	/^#define NULL /;"	d
NULL	include/unistd.h	/^#define NULL /;"	d
N_ABS	include/a.out.h	/^#define N_ABS /;"	d
N_BADMAG	include/a.out.h	/^#define N_BADMAG(/;"	d
N_BSS	include/a.out.h	/^#define N_BSS /;"	d
N_BSSADDR	include/a.out.h	/^#define N_BSSADDR(/;"	d
N_COMM	include/a.out.h	/^#define N_COMM /;"	d
N_DATA	include/a.out.h	/^#define N_DATA /;"	d
N_DATADDR	include/a.out.h	/^#define N_DATADDR(/;"	d
N_DATOFF	include/a.out.h	/^#define N_DATOFF(/;"	d
N_DRELOFF	include/a.out.h	/^#define N_DRELOFF(/;"	d
N_EXT	include/a.out.h	/^#define N_EXT /;"	d
N_FN	include/a.out.h	/^#define N_FN /;"	d
N_INDR	include/a.out.h	/^#define N_INDR /;"	d
N_MAGIC	include/a.out.h	/^#define N_MAGIC(/;"	d
N_SETA	include/a.out.h	/^#define	N_SETA	/;"	d
N_SETB	include/a.out.h	/^#define	N_SETB	/;"	d
N_SETD	include/a.out.h	/^#define	N_SETD	/;"	d
N_SETT	include/a.out.h	/^#define	N_SETT	/;"	d
N_SETV	include/a.out.h	/^#define N_SETV	/;"	d
N_STAB	include/a.out.h	/^#define N_STAB /;"	d
N_STROFF	include/a.out.h	/^#define N_STROFF(/;"	d
N_SYMOFF	include/a.out.h	/^#define N_SYMOFF(/;"	d
N_TEXT	include/a.out.h	/^#define N_TEXT /;"	d
N_TRELOFF	include/a.out.h	/^#define N_TRELOFF(/;"	d
N_TXTADDR	include/a.out.h	/^#define N_TXTADDR(/;"	d
N_TXTOFF	include/a.out.h	/^#define N_TXTOFF(/;"	d
N_TYPE	include/a.out.h	/^#define N_TYPE /;"	d
N_UNDF	include/a.out.h	/^#define N_UNDF /;"	d
OBJS	fs/Makefile	/^OBJS=	open.o read_write.o inode.o file_table.o buffer.o super.o \\$/;"	m
OBJS	kernel/Makefile	/^OBJS  = sched.o system_call.o traps.o asm.o fork.o \\$/;"	m
OBJS	lib/Makefile	/^OBJS  = ctype.o _exit.o open.o close.o errno.o write.o dup.o setsid.o \\$/;"	m
OBJS	mm/Makefile	/^OBJS	= memory.o page.o$/;"	m
OCRNL	include/termios.h	/^#define OCRNL	/;"	d
OFDEL	include/termios.h	/^#define OFDEL	/;"	d
OFILL	include/termios.h	/^#define OFILL	/;"	d
OLCUC	include/termios.h	/^#define OLCUC	/;"	d
OLDESP	kernel/system_call.s	/^OLDESP		= 0x28$/;"	d
OLDSS	kernel/system_call.s	/^OLDSS		= 0x2C$/;"	d
OMAGIC	include/a.out.h	/^#define OMAGIC /;"	d
ONLCR	include/termios.h	/^#define ONLCR	/;"	d
ONLRET	include/termios.h	/^#define ONLRET	/;"	d
ONOCR	include/termios.h	/^#define ONOCR	/;"	d
OPOST	include/termios.h	/^#define OPOST	/;"	d
ORIG_ROOT_DEV	init/main.c	/^#define ORIG_ROOT_DEV /;"	d	file:
O_ACCMODE	include/fcntl.h	/^#define O_ACCMODE	/;"	d
O_APPEND	include/fcntl.h	/^#define O_APPEND	/;"	d
O_CREAT	include/fcntl.h	/^#define O_CREAT	/;"	d
O_EXCL	include/fcntl.h	/^#define O_EXCL	/;"	d
O_NDELAY	include/fcntl.h	/^#define O_NDELAY	/;"	d
O_NOCTTY	include/fcntl.h	/^#define O_NOCTTY	/;"	d
O_NONBLOCK	include/fcntl.h	/^#define O_NONBLOCK	/;"	d
O_RDONLY	include/fcntl.h	/^#define O_RDONLY	/;"	d
O_RDWR	include/fcntl.h	/^#define O_RDWR	/;"	d
O_TRUNC	include/fcntl.h	/^#define O_TRUNC	/;"	d
O_WRONLY	include/fcntl.h	/^#define O_WRONLY	/;"	d
PAGE_SIZE	include/a.out.h	/^#define	PAGE_SIZE	/;"	d
PAGE_SIZE	include/a.out.h	/^#define PAGE_SIZE /;"	d
PAGING_MEMORY	mm/memory.c	/^#define PAGING_MEMORY /;"	d	file:
PAGING_PAGES	mm/memory.c	/^#define PAGING_PAGES /;"	d	file:
PARENB	include/termios.h	/^#define PARENB /;"	d
PARMRK	include/termios.h	/^#define PARMRK	/;"	d
PARODD	include/termios.h	/^#define PARODD /;"	d
PENDIN	include/termios.h	/^#define PENDIN	/;"	d
PLUS	kernel/vsprintf.c	/^#define PLUS	/;"	d	file:
RAMDISK	Makefile	/^RAMDISK = #-DRAMDISK=512$/;"	m
ROOT_DEV	Makefile	/^ROOT_DEV=\/dev\/hd6$/;"	m
ROOT_DEV	boot/bootsect.s	/^ROOT_DEV = 0x306$/;"	d
ROOT_DEV	fs/super.c	/^int ROOT_DEV = 0;$/;"	v
R_OK	include/unistd.h	/^#define R_OK	/;"	d
SA_NOCLDSTOP	include/signal.h	/^#define SA_NOCLDSTOP	/;"	d
SA_NOMASK	include/signal.h	/^#define SA_NOMASK	/;"	d
SA_ONESHOT	include/signal.h	/^#define SA_ONESHOT	/;"	d
SEEK_CUR	include/unistd.h	/^#define SEEK_CUR	/;"	d
SEEK_END	include/unistd.h	/^#define SEEK_END	/;"	d
SEEK_SET	include/unistd.h	/^#define SEEK_SET	/;"	d
SEGMENT_SIZE	include/a.out.h	/^#define	SEGMENT_SIZE	/;"	d
SEGMENT_SIZE	include/a.out.h	/^#define SEGMENT_SIZE /;"	d
SETUPLEN	boot/bootsect.s	/^SETUPLEN = 4				! nr of setup-sectors$/;"	d
SETUPSEG	boot/bootsect.s	/^SETUPSEG = 0x9020			! setup starts here$/;"	d
SETUPSEG	boot/setup.s	/^SETUPSEG = 0x9020	! this is the current segment$/;"	d
SETUP_SECTS	tools/build.c	/^#define SETUP_SECTS /;"	d	file:
SIGABRT	include/signal.h	/^#define SIGABRT	/;"	d
SIGALRM	include/signal.h	/^#define SIGALRM	/;"	d
SIGCHLD	include/signal.h	/^#define SIGCHLD	/;"	d
SIGCONT	include/signal.h	/^#define SIGCONT	/;"	d
SIGFPE	include/signal.h	/^#define SIGFPE	/;"	d
SIGHUP	include/signal.h	/^#define SIGHUP	/;"	d
SIGILL	include/signal.h	/^#define SIGILL	/;"	d
SIGINT	include/signal.h	/^#define SIGINT	/;"	d
SIGIOT	include/signal.h	/^#define SIGIOT	/;"	d
SIGKILL	include/signal.h	/^#define SIGKILL	/;"	d
SIGN	kernel/vsprintf.c	/^#define SIGN	/;"	d	file:
SIGPIPE	include/signal.h	/^#define SIGPIPE	/;"	d
SIGQUIT	include/signal.h	/^#define SIGQUIT	/;"	d
SIGSEGV	include/signal.h	/^#define SIGSEGV	/;"	d
SIGSTKFLT	include/signal.h	/^#define SIGSTKFLT	/;"	d
SIGSTOP	include/signal.h	/^#define SIGSTOP	/;"	d
SIGTERM	include/signal.h	/^#define SIGTERM	/;"	d
SIGTRAP	include/signal.h	/^#define SIGTRAP	/;"	d
SIGTSTP	include/signal.h	/^#define SIGTSTP	/;"	d
SIGTTIN	include/signal.h	/^#define SIGTTIN	/;"	d
SIGTTOU	include/signal.h	/^#define SIGTTOU	/;"	d
SIGUNUSED	include/signal.h	/^#define SIGUNUSED	/;"	d
SIGUSR1	include/signal.h	/^#define SIGUSR1	/;"	d
SIGUSR2	include/signal.h	/^#define SIGUSR2	/;"	d
SIG_BLOCK	include/signal.h	/^#define SIG_BLOCK /;"	d
SIG_CHLD	kernel/system_call.s	/^SIG_CHLD	= 17$/;"	d
SIG_DFL	include/signal.h	/^#define SIG_DFL	/;"	d
SIG_IGN	include/signal.h	/^#define SIG_IGN	/;"	d
SIG_SETMASK	include/signal.h	/^#define SIG_SETMASK /;"	d
SIG_UNBLOCK	include/signal.h	/^#define SIG_UNBLOCK /;"	d
SMALL	kernel/vsprintf.c	/^#define SMALL	/;"	d	file:
SPACE	kernel/vsprintf.c	/^#define SPACE	/;"	d	file:
SPECIAL	kernel/vsprintf.c	/^#define SPECIAL	/;"	d	file:
STDERR_FILENO	include/unistd.h	/^#define STDERR_FILENO	/;"	d
STDIN_FILENO	include/unistd.h	/^#define STDIN_FILENO	/;"	d
STDOUT_FILENO	include/unistd.h	/^#define STDOUT_FILENO	/;"	d
STRINGIFY	tools/build.c	/^#define STRINGIFY(/;"	d	file:
SYSSEG	boot/bootsect.s	/^SYSSEG   = 0x1000			! system loaded at 0x10000 (65536).$/;"	d
SYSSEG	boot/setup.s	/^SYSSEG   = 0x1000	! system loaded at 0x10000 (65536).$/;"	d
SYSSIZE	boot/bootsect.s	/^SYSSIZE = 0x3000$/;"	d
SYS_SIZE	tools/build.c	/^#define SYS_SIZE /;"	d	file:
TAB0	include/termios.h	/^#define   TAB0	/;"	d
TAB1	include/termios.h	/^#define   TAB1	/;"	d
TAB2	include/termios.h	/^#define   TAB2	/;"	d
TAB3	include/termios.h	/^#define   TAB3	/;"	d
TABDLY	include/termios.h	/^#define TABDLY	/;"	d
TCFLSH	include/termios.h	/^#define TCFLSH	/;"	d
TCGETA	include/termios.h	/^#define TCGETA	/;"	d
TCGETS	include/termios.h	/^#define TCGETS	/;"	d
TCIFLUSH	include/termios.h	/^#define	TCIFLUSH	/;"	d
TCIOFF	include/termios.h	/^#define	TCIOFF	/;"	d
TCIOFLUSH	include/termios.h	/^#define	TCIOFLUSH	/;"	d
TCION	include/termios.h	/^#define	TCION	/;"	d
TCOFLUSH	include/termios.h	/^#define	TCOFLUSH	/;"	d
TCOOFF	include/termios.h	/^#define	TCOOFF	/;"	d
TCOON	include/termios.h	/^#define	TCOON	/;"	d
TCSADRAIN	include/termios.h	/^#define	TCSADRAIN	/;"	d
TCSAFLUSH	include/termios.h	/^#define	TCSAFLUSH	/;"	d
TCSANOW	include/termios.h	/^#define	TCSANOW	/;"	d
TCSBRK	include/termios.h	/^#define TCSBRK	/;"	d
TCSETA	include/termios.h	/^#define TCSETA	/;"	d
TCSETAF	include/termios.h	/^#define TCSETAF	/;"	d
TCSETAW	include/termios.h	/^#define TCSETAW	/;"	d
TCSETS	include/termios.h	/^#define TCSETS	/;"	d
TCSETSF	include/termios.h	/^#define TCSETSF	/;"	d
TCSETSW	include/termios.h	/^#define TCSETSW	/;"	d
TCXONC	include/termios.h	/^#define TCXONC	/;"	d
TIME_REQUESTS	kernel/sched.c	/^#define TIME_REQUESTS /;"	d	file:
TIOCEXCL	include/termios.h	/^#define TIOCEXCL	/;"	d
TIOCGPGRP	include/termios.h	/^#define TIOCGPGRP	/;"	d
TIOCGSOFTCAR	include/termios.h	/^#define TIOCGSOFTCAR	/;"	d
TIOCGWINSZ	include/termios.h	/^#define TIOCGWINSZ	/;"	d
TIOCINQ	include/termios.h	/^#define TIOCINQ	/;"	d
TIOCMBIC	include/termios.h	/^#define TIOCMBIC	/;"	d
TIOCMBIS	include/termios.h	/^#define TIOCMBIS	/;"	d
TIOCMGET	include/termios.h	/^#define TIOCMGET	/;"	d
TIOCMSET	include/termios.h	/^#define TIOCMSET	/;"	d
TIOCM_CAR	include/termios.h	/^#define TIOCM_CAR	/;"	d
TIOCM_CD	include/termios.h	/^#define TIOCM_CD	/;"	d
TIOCM_CTS	include/termios.h	/^#define TIOCM_CTS	/;"	d
TIOCM_DSR	include/termios.h	/^#define TIOCM_DSR	/;"	d
TIOCM_DTR	include/termios.h	/^#define TIOCM_DTR	/;"	d
TIOCM_LE	include/termios.h	/^#define TIOCM_LE	/;"	d
TIOCM_RI	include/termios.h	/^#define TIOCM_RI	/;"	d
TIOCM_RNG	include/termios.h	/^#define TIOCM_RNG	/;"	d
TIOCM_RTS	include/termios.h	/^#define TIOCM_RTS	/;"	d
TIOCM_SR	include/termios.h	/^#define TIOCM_SR	/;"	d
TIOCM_ST	include/termios.h	/^#define TIOCM_ST	/;"	d
TIOCNXCL	include/termios.h	/^#define TIOCNXCL	/;"	d
TIOCOUTQ	include/termios.h	/^#define TIOCOUTQ	/;"	d
TIOCSCTTY	include/termios.h	/^#define TIOCSCTTY	/;"	d
TIOCSPGRP	include/termios.h	/^#define TIOCSPGRP	/;"	d
TIOCSSOFTCAR	include/termios.h	/^#define TIOCSSOFTCAR	/;"	d
TIOCSTI	include/termios.h	/^#define TIOCSTI	/;"	d
TIOCSWINSZ	include/termios.h	/^#define TIOCSWINSZ	/;"	d
TOSTOP	include/termios.h	/^#define TOSTOP	/;"	d
TTY_BUF_SIZE	include/termios.h	/^#define TTY_BUF_SIZE /;"	d
USED	mm/memory.c	/^#define USED /;"	d	file:
VDISCARD	include/termios.h	/^#define VDISCARD /;"	d
VEOF	include/termios.h	/^#define VEOF /;"	d
VEOL	include/termios.h	/^#define VEOL /;"	d
VEOL2	include/termios.h	/^#define VEOL2 /;"	d
VERASE	include/termios.h	/^#define VERASE /;"	d
VINTR	include/termios.h	/^#define VINTR /;"	d
VKILL	include/termios.h	/^#define VKILL /;"	d
VLNEXT	include/termios.h	/^#define VLNEXT /;"	d
VMIN	include/termios.h	/^#define VMIN /;"	d
VQUIT	include/termios.h	/^#define VQUIT /;"	d
VREPRINT	include/termios.h	/^#define VREPRINT /;"	d
VSTART	include/termios.h	/^#define VSTART /;"	d
VSTOP	include/termios.h	/^#define VSTOP /;"	d
VSUSP	include/termios.h	/^#define VSUSP /;"	d
VSWTC	include/termios.h	/^#define VSWTC /;"	d
VT0	include/termios.h	/^#define   VT0	/;"	d
VT1	include/termios.h	/^#define   VT1	/;"	d
VTDLY	include/termios.h	/^#define VTDLY	/;"	d
VTIME	include/termios.h	/^#define VTIME /;"	d
VWERASE	include/termios.h	/^#define VWERASE /;"	d
W_OK	include/unistd.h	/^#define W_OK	/;"	d
XCASE	include/termios.h	/^#define XCASE	/;"	d
XTABS	include/termios.h	/^#define   XTABS	/;"	d
X_OK	include/unistd.h	/^#define X_OK	/;"	d
YEAR	kernel/mktime.c	/^#define YEAR /;"	d	file:
ZEROPAD	kernel/vsprintf.c	/^#define ZEROPAD	/;"	d	file:
ZMAGIC	include/a.out.h	/^#define ZMAGIC /;"	d
_A_OUT_H	include/a.out.h	/^#define _A_OUT_H$/;"	d
_BLOCKABLE	kernel/sched.c	/^#define _BLOCKABLE /;"	d	file:
_C	include/ctype.h	/^#define _C	/;"	d
_CONST_H	include/const.h	/^#define _CONST_H$/;"	d
_CTYPE_H	include/ctype.h	/^#define _CTYPE_H$/;"	d
_D	include/ctype.h	/^#define _D	/;"	d
_ERRNO_H	include/errno.h	/^#define _ERRNO_H$/;"	d
_FCNTL_H	include/fcntl.h	/^#define _FCNTL_H$/;"	d
_L	include/ctype.h	/^#define _L	/;"	d
_NSIG	include/signal.h	/^#define _NSIG /;"	d
_N_BADMAG	include/a.out.h	/^#define _N_BADMAG(/;"	d
_N_HDROFF	include/a.out.h	/^#define _N_HDROFF(/;"	d
_N_SEGMENT_ROUND	include/a.out.h	/^#define _N_SEGMENT_ROUND(/;"	d
_N_TXTENDADDR	include/a.out.h	/^#define _N_TXTENDADDR(/;"	d
_P	include/ctype.h	/^#define _P	/;"	d
_PC_CHOWN_RESTRICTED	include/unistd.h	/^#define _PC_CHOWN_RESTRICTED	/;"	d
_PC_LINK_MAX	include/unistd.h	/^#define _PC_LINK_MAX	/;"	d
_PC_MAX_CANON	include/unistd.h	/^#define _PC_MAX_CANON	/;"	d
_PC_MAX_INPUT	include/unistd.h	/^#define _PC_MAX_INPUT	/;"	d
_PC_NAME_MAX	include/unistd.h	/^#define _PC_NAME_MAX	/;"	d
_PC_NO_TRUNC	include/unistd.h	/^#define _PC_NO_TRUNC	/;"	d
_PC_PATH_MAX	include/unistd.h	/^#define _PC_PATH_MAX	/;"	d
_PC_PIPE_BUF	include/unistd.h	/^#define _PC_PIPE_BUF	/;"	d
_PC_VDISABLE	include/unistd.h	/^#define _PC_VDISABLE	/;"	d
_POSIX_CHOWN_RESTRICTED	include/unistd.h	/^#define _POSIX_CHOWN_RESTRICTED	/;"	d
_POSIX_NO_TRUNC	include/unistd.h	/^#define _POSIX_NO_TRUNC	/;"	d
_POSIX_VDISABLE	include/unistd.h	/^#define _POSIX_VDISABLE /;"	d
_POSIX_VERSION	include/unistd.h	/^#define _POSIX_VERSION /;"	d
_PTRDIFF_T	include/stddef.h	/^#define _PTRDIFF_T$/;"	d
_S	include/ctype.h	/^#define _S	/;"	d
_S	kernel/sched.c	/^#define _S(/;"	d	file:
_SC_ARG_MAX	include/unistd.h	/^#define _SC_ARG_MAX	/;"	d
_SC_CHILD_MAX	include/unistd.h	/^#define _SC_CHILD_MAX	/;"	d
_SC_CLOCKS_PER_SEC	include/unistd.h	/^#define _SC_CLOCKS_PER_SEC	/;"	d
_SC_JOB_CONTROL	include/unistd.h	/^#define _SC_JOB_CONTROL	/;"	d
_SC_NGROUPS_MAX	include/unistd.h	/^#define _SC_NGROUPS_MAX	/;"	d
_SC_OPEN_MAX	include/unistd.h	/^#define _SC_OPEN_MAX	/;"	d
_SC_SAVED_IDS	include/unistd.h	/^#define _SC_SAVED_IDS	/;"	d
_SC_VERSION	include/unistd.h	/^#define _SC_VERSION	/;"	d
_SIGNAL_H	include/signal.h	/^#define _SIGNAL_H$/;"	d
_SIZE_T	include/stddef.h	/^#define _SIZE_T$/;"	d
_SIZE_T	include/string.h	/^#define _SIZE_T$/;"	d
_SIZE_T	include/time.h	/^#define _SIZE_T$/;"	d
_SP	include/ctype.h	/^#define _SP	/;"	d
_STDARG_H	include/stdarg.h	/^#define _STDARG_H$/;"	d
_STDDEF_H	include/stddef.h	/^#define _STDDEF_H$/;"	d
_STRING_H_	include/string.h	/^#define _STRING_H_$/;"	d
_TERMIOS_H	include/termios.h	/^#define _TERMIOS_H$/;"	d
_TIME_H	include/time.h	/^#define _TIME_H$/;"	d
_TIME_T	include/time.h	/^#define _TIME_T$/;"	d
_U	include/ctype.h	/^#define _U	/;"	d
_UNISTD_H	include/unistd.h	/^#define _UNISTD_H$/;"	d
_UTIME_H	include/utime.h	/^#define _UTIME_H$/;"	d
_X	include/ctype.h	/^#define _X	/;"	d
__GNU_EXEC_MACROS__	include/a.out.h	/^#define __GNU_EXEC_MACROS__$/;"	d
__LIBRARY__	init/main.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/_exit.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/close.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/dup.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/execve.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/open.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/setsid.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/string.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/wait.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/write.c	/^#define __LIBRARY__$/;"	d	file:
__NR_access	include/unistd.h	/^#define __NR_access	/;"	d
__NR_acct	include/unistd.h	/^#define __NR_acct	/;"	d
__NR_alarm	include/unistd.h	/^#define __NR_alarm	/;"	d
__NR_break	include/unistd.h	/^#define __NR_break	/;"	d
__NR_brk	include/unistd.h	/^#define __NR_brk	/;"	d
__NR_chdir	include/unistd.h	/^#define __NR_chdir	/;"	d
__NR_chmod	include/unistd.h	/^#define __NR_chmod	/;"	d
__NR_chown	include/unistd.h	/^#define __NR_chown	/;"	d
__NR_chroot	include/unistd.h	/^#define __NR_chroot	/;"	d
__NR_close	include/unistd.h	/^#define __NR_close	/;"	d
__NR_creat	include/unistd.h	/^#define __NR_creat	/;"	d
__NR_dup	include/unistd.h	/^#define __NR_dup	/;"	d
__NR_dup2	include/unistd.h	/^#define __NR_dup2	/;"	d
__NR_execve	include/unistd.h	/^#define __NR_execve	/;"	d
__NR_exit	include/unistd.h	/^#define __NR_exit	/;"	d
__NR_fcntl	include/unistd.h	/^#define __NR_fcntl	/;"	d
__NR_fork	include/unistd.h	/^#define __NR_fork	/;"	d
__NR_fstat	include/unistd.h	/^#define __NR_fstat	/;"	d
__NR_ftime	include/unistd.h	/^#define __NR_ftime	/;"	d
__NR_getegid	include/unistd.h	/^#define __NR_getegid	/;"	d
__NR_geteuid	include/unistd.h	/^#define __NR_geteuid	/;"	d
__NR_getgid	include/unistd.h	/^#define __NR_getgid	/;"	d
__NR_getpgrp	include/unistd.h	/^#define __NR_getpgrp	/;"	d
__NR_getpid	include/unistd.h	/^#define __NR_getpid	/;"	d
__NR_getppid	include/unistd.h	/^#define __NR_getppid	/;"	d
__NR_getuid	include/unistd.h	/^#define __NR_getuid	/;"	d
__NR_gtty	include/unistd.h	/^#define __NR_gtty	/;"	d
__NR_ioctl	include/unistd.h	/^#define __NR_ioctl	/;"	d
__NR_kill	include/unistd.h	/^#define __NR_kill	/;"	d
__NR_link	include/unistd.h	/^#define __NR_link	/;"	d
__NR_lock	include/unistd.h	/^#define __NR_lock	/;"	d
__NR_lseek	include/unistd.h	/^#define __NR_lseek	/;"	d
__NR_mkdir	include/unistd.h	/^#define __NR_mkdir	/;"	d
__NR_mknod	include/unistd.h	/^#define __NR_mknod	/;"	d
__NR_mount	include/unistd.h	/^#define __NR_mount	/;"	d
__NR_mpx	include/unistd.h	/^#define __NR_mpx	/;"	d
__NR_nice	include/unistd.h	/^#define __NR_nice	/;"	d
__NR_open	include/unistd.h	/^#define __NR_open	/;"	d
__NR_pause	include/unistd.h	/^#define __NR_pause	/;"	d
__NR_phys	include/unistd.h	/^#define __NR_phys	/;"	d
__NR_pipe	include/unistd.h	/^#define __NR_pipe	/;"	d
__NR_prof	include/unistd.h	/^#define __NR_prof	/;"	d
__NR_ptrace	include/unistd.h	/^#define __NR_ptrace	/;"	d
__NR_read	include/unistd.h	/^#define __NR_read	/;"	d
__NR_rename	include/unistd.h	/^#define __NR_rename	/;"	d
__NR_rmdir	include/unistd.h	/^#define __NR_rmdir	/;"	d
__NR_setgid	include/unistd.h	/^#define __NR_setgid	/;"	d
__NR_setpgid	include/unistd.h	/^#define __NR_setpgid	/;"	d
__NR_setregid	include/unistd.h	/^#define __NR_setregid	/;"	d
__NR_setreuid	include/unistd.h	/^#define __NR_setreuid	/;"	d
__NR_setsid	include/unistd.h	/^#define __NR_setsid	/;"	d
__NR_setuid	include/unistd.h	/^#define __NR_setuid	/;"	d
__NR_setup	include/unistd.h	/^#define __NR_setup	/;"	d
__NR_sgetmask	include/unistd.h	/^#define __NR_sgetmask	/;"	d
__NR_sigaction	include/unistd.h	/^#define __NR_sigaction	/;"	d
__NR_signal	include/unistd.h	/^#define __NR_signal	/;"	d
__NR_ssetmask	include/unistd.h	/^#define __NR_ssetmask	/;"	d
__NR_stat	include/unistd.h	/^#define __NR_stat	/;"	d
__NR_stime	include/unistd.h	/^#define __NR_stime	/;"	d
__NR_stty	include/unistd.h	/^#define __NR_stty	/;"	d
__NR_sync	include/unistd.h	/^#define __NR_sync	/;"	d
__NR_time	include/unistd.h	/^#define __NR_time	/;"	d
__NR_times	include/unistd.h	/^#define __NR_times	/;"	d
__NR_ulimit	include/unistd.h	/^#define __NR_ulimit	/;"	d
__NR_umask	include/unistd.h	/^#define __NR_umask	/;"	d
__NR_umount	include/unistd.h	/^#define __NR_umount	/;"	d
__NR_uname	include/unistd.h	/^#define __NR_uname	/;"	d
__NR_unlink	include/unistd.h	/^#define __NR_unlink	/;"	d
__NR_ustat	include/unistd.h	/^#define __NR_ustat	/;"	d
__NR_utime	include/unistd.h	/^#define __NR_utime	/;"	d
__NR_waitpid	include/unistd.h	/^#define __NR_waitpid	/;"	d
__NR_write	include/unistd.h	/^#define __NR_write	/;"	d
__va_rounded_size	include/stdarg.h	/^#define __va_rounded_size(/;"	d
_bmap	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	f	file:
_bounds	kernel/asm.s	/^_bounds:$/;"	l
_bucket_dir	lib/malloc.c	/^struct _bucket_dir {	\/* 8 bytes *\/$/;"	s	file:
_coprocessor_error	kernel/system_call.s	/^_coprocessor_error:$/;"	l
_coprocessor_segment_overrun	kernel/asm.s	/^_coprocessor_segment_overrun:$/;"	l
_ctmp	lib/ctype.c	/^char _ctmp;$/;"	v
_ctype	lib/ctype.c	/^unsigned char _ctype[] = {0x00,			\/* EOF *\/$/;"	v
_debug	kernel/asm.s	/^_debug:$/;"	l
_device_not_available	kernel/system_call.s	/^_device_not_available:$/;"	l
_divide_error	kernel/asm.s	/^_divide_error:$/;"	l
_double_fault	kernel/asm.s	/^_double_fault:$/;"	l
_exit	lib/_exit.c	/^volatile void _exit(int exit_code)$/;"	f
_floppy_interrupt	kernel/system_call.s	/^_floppy_interrupt:$/;"	l
_fs	kernel/traps.c	/^#define _fs(/;"	d	file:
_gdt	boot/head.s	/^_gdt:	.quad 0x0000000000000000	\/* NULL descriptor *\/$/;"	l
_general_protection	kernel/asm.s	/^_general_protection:$/;"	l
_hashfn	fs/buffer.c	/^#define _hashfn(/;"	d	file:
_hd_interrupt	kernel/system_call.s	/^_hd_interrupt:$/;"	l
_idt	boot/head.s	/^_idt:	.fill 256,8,0		# idt is uninitialized$/;"	l
_int3	kernel/asm.s	/^_int3:$/;"	l
_invalid_TSS	kernel/asm.s	/^_invalid_TSS:$/;"	l
_invalid_op	kernel/asm.s	/^_invalid_op:$/;"	l
_irq13	kernel/asm.s	/^_irq13:$/;"	l
_nmi	kernel/asm.s	/^_nmi:$/;"	l
_overflow	kernel/asm.s	/^_overflow:$/;"	l
_page_fault	mm/page.s	/^_page_fault:$/;"	l
_parallel_interrupt	kernel/system_call.s	/^_parallel_interrupt:$/;"	l
_pg_dir	boot/head.s	/^_pg_dir:$/;"	l
_reserved	kernel/asm.s	/^_reserved:$/;"	l
_segment_not_present	kernel/asm.s	/^_segment_not_present:$/;"	l
_set_gate	include/asm/system.h	/^#define _set_gate(/;"	d
_set_seg_desc	include/asm/system.h	/^#define _set_seg_desc(/;"	d
_set_tssldt_desc	include/asm/system.h	/^#define _set_tssldt_desc(/;"	d
_stack_segment	kernel/asm.s	/^_stack_segment:$/;"	l
_sys_execve	kernel/system_call.s	/^_sys_execve:$/;"	l
_sys_fork	kernel/system_call.s	/^_sys_fork:$/;"	l
_syscall0	include/unistd.h	/^#define _syscall0(/;"	d
_syscall1	include/unistd.h	/^#define _syscall1(/;"	d
_syscall2	include/unistd.h	/^#define _syscall2(/;"	d
_syscall3	include/unistd.h	/^#define _syscall3(/;"	d
_system_call	kernel/system_call.s	/^_system_call:$/;"	l
_timer_interrupt	kernel/system_call.s	/^_timer_interrupt:$/;"	l
_tmp_floppy_area	boot/head.s	/^_tmp_floppy_area:$/;"	l
a	kernel/sched.c	/^	long * a;$/;"	m	struct:__anon2	file:
a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	struct:exec
a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/$/;"	m	struct:exec
a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	struct:exec
a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	struct:exec
a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	struct:exec
a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	struct:exec
a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/$/;"	m	struct:exec
a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	struct:exec
actime	include/utime.h	/^	time_t actime;$/;"	m	struct:utimbuf
add_entry	fs/namei.c	/^static struct buffer_head * add_entry(struct m_inode * dir,$/;"	f	file:
add_timer	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	f
after_page_tables	boot/head.s	/^after_page_tables:$/;"	l
argv	init/main.c	/^static char * argv[] = { "-\/bin\/sh",NULL };$/;"	v	file:
argv_rc	init/main.c	/^static char * argv_rc[] = { "\/bin\/sh", NULL };$/;"	v	file:
b	kernel/sched.c	/^	short b;$/;"	m	struct:__anon2	file:
bad_rt	boot/bootsect.s	/^bad_rt:	mov ax,#0$/;"	l
bad_sys_call	kernel/system_call.s	/^bad_sys_call:$/;"	l
begbss	boot/bootsect.s	/^begbss:$/;"	l
begbss	boot/setup.s	/^begbss:$/;"	l
begdata	boot/bootsect.s	/^begdata:$/;"	l
begdata	boot/setup.s	/^begdata:$/;"	l
begtext	boot/bootsect.s	/^begtext:$/;"	l
begtext	boot/setup.s	/^begtext:$/;"	l
block_read	fs/block_dev(1).c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	f
block_read	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	f
block_write	fs/block_dev(1).c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	f
block_write	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	f
blocked	kernel/system_call.s	/^blocked = (33*16)$/;"	d
bmap	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	f
boot_flag	boot/bootsect.s	/^boot_flag:$/;"	l
bread	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	f
bread_page	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	f
breada	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	f
brelse	fs/buffer.c	/^void brelse(struct buffer_head * buf)$/;"	f
bucket_desc	lib/malloc.c	/^struct bucket_desc {	\/* 16 bytes *\/$/;"	s	file:
bucket_dir	lib/malloc.c	/^struct _bucket_dir bucket_dir[] = {$/;"	v	typeref:struct:_bucket_dir
bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;$/;"	m	struct:bucket_desc	file:
buf	kernel/printk.c	/^static char buf[1024];$/;"	v	file:
buffer_init	fs/buffer.c	/^void buffer_init(long buffer_end)$/;"	f
buffer_memory_end	init/main.c	/^static long buffer_memory_end = 0;$/;"	v	file:
buffer_wait	fs/buffer.c	/^static struct task_struct * buffer_wait = NULL;$/;"	v	typeref:struct:task_struct	file:
c_cc	include/termios.h	/^	unsigned char c_cc[NCCS];	\/* control characters *\/$/;"	m	struct:termios
c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	struct:termio
c_cflag	include/termios.h	/^	unsigned long c_cflag;		\/* control mode flags *\/$/;"	m	struct:termios
c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	struct:termio
c_iflag	include/termios.h	/^	unsigned long c_iflag;		\/* input mode flags *\/$/;"	m	struct:termios
c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	struct:termio
c_lflag	include/termios.h	/^	unsigned long c_lflag;		\/* local mode flags *\/$/;"	m	struct:termios
c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	struct:termio
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	struct:termio
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	struct:termios
c_oflag	include/termios.h	/^	unsigned long c_oflag;		\/* output mode flags *\/$/;"	m	struct:termios
c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	struct:termio
calc_mem	mm/memory.c	/^void calc_mem(void)$/;"	f
chain	lib/malloc.c	/^	struct bucket_desc	*chain;$/;"	m	struct:_bucket_dir	typeref:struct:_bucket_dir::bucket_desc	file:
change_ldt	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	f	file:
check_disk_change	fs/buffer.c	/^void check_disk_change(int dev)$/;"	f
check_x87	boot/head.s	/^check_x87:$/;"	l
clear_bit	fs/bitmap.c	/^#define clear_bit(/;"	d	file:
clear_block	fs/bitmap.c	/^#define clear_block(/;"	d	file:
cli	include/asm/system.h	/^#define cli(/;"	d
clock_t	include/time.h	/^typedef long clock_t;$/;"	t
copy_mem	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	f
copy_page	mm/memory.c	/^#define copy_page(/;"	d	file:
copy_page_tables	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	f
copy_process	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	f
copy_strings	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	f	file:
count	fs/exec.c	/^static int count(char ** argv)$/;"	f	file:
counter	kernel/system_call.s	/^counter	= 4$/;"	d
cp_stat	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	f	file:
create_block	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	f
create_tables	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	f	file:
crw_ptr	fs/char_dev.c	/^typedef (*crw_ptr)(int rw,unsigned minor,char * buf,int count,off_t * pos);$/;"	t	file:
crw_table	fs/char_dev.c	/^static crw_ptr crw_table[]={$/;"	v	file:
current	kernel/sched.c	/^struct task_struct *current = &(init_task.task);$/;"	v	typeref:struct:task_struct
current_DOR	kernel/sched.c	/^unsigned char current_DOR = 0x0C;$/;"	v
die	boot/bootsect.s	/^die:	jne die			! es must be at 64kB boundary$/;"	l
die	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	f	file:
die	tools/build.c	/^void die(char * str)$/;"	f
dir_namei	fs/namei.c	/^static struct m_inode * dir_namei(const char * pathname,$/;"	f	file:
do_bounds	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	f
do_coprocessor_error	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	f
do_coprocessor_segment_overrun	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	f
do_debug	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	f
do_device_not_available	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	f
do_div	kernel/vsprintf.c	/^#define do_div(/;"	d	file:
do_divide_error	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	f
do_double_fault	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	f
do_execve	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	f
do_exit	kernel/exit.c	/^int do_exit(long code)$/;"	f
do_floppy_timer	kernel/sched.c	/^void do_floppy_timer(void)$/;"	f
do_general_protection	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	f
do_int3	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	f
do_invalid_TSS	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	f
do_invalid_op	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	f
do_move	boot/setup.s	/^do_move:$/;"	l
do_nmi	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	f
do_no_page	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	f
do_overflow	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	f
do_reserved	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	f
do_segment_not_present	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	f
do_signal	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	f
do_stack_segment	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	f
do_timer	kernel/sched.c	/^void do_timer(long cpl)$/;"	f
do_wp_page	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	f
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	s	file:
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	v	typeref:struct:drive_info
dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	struct:drive_info	file:
dupfd	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	f	file:
empty_8042	boot/setup.s	/^empty_8042:$/;"	l
empty_dir	fs/namei.c	/^static int empty_dir(struct m_inode * inode)$/;"	f	file:
end_move	boot/setup.s	/^end_move:$/;"	l
endbss	boot/bootsect.s	/^endbss:$/;"	l
endbss	boot/setup.s	/^endbss:$/;"	l
enddata	boot/bootsect.s	/^enddata:$/;"	l
enddata	boot/setup.s	/^enddata:$/;"	l
endtext	boot/bootsect.s	/^endtext:$/;"	l
endtext	boot/setup.s	/^endtext:$/;"	l
entry	boot/bootsect.s	/^entry start$/;"	l
entry	boot/setup.s	/^entry start$/;"	l
envp	init/main.c	/^static char * envp[] = { "HOME=\/usr\/root", NULL };$/;"	v	file:
envp_rc	init/main.c	/^static char * envp_rc[] = { "HOME=\/", NULL };$/;"	v	file:
errno	lib/errno.c	/^int errno;$/;"	v
error_code	kernel/asm.s	/^error_code:$/;"	l
exec	include/a.out.h	/^struct exec {$/;"	s
extern	lib/string.c	/^#define extern$/;"	d	file:
file_read	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f
file_table	fs/file_table.c	/^struct file file_table[NR_FILE];$/;"	v	typeref:struct:file
file_write	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f
find_buffer	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	f	file:
find_empty_process	kernel/fork.c	/^int find_empty_process(void)$/;"	f
find_entry	fs/namei.c	/^static struct buffer_head * find_entry(struct m_inode ** dir,$/;"	f	file:
find_first_zero	fs/bitmap.c	/^#define find_first_zero(/;"	d	file:
flock	include/fcntl.h	/^struct flock {$/;"	s
floppy_off	kernel/sched.c	/^void floppy_off(unsigned int nr)$/;"	f
floppy_on	kernel/sched.c	/^void floppy_on(unsigned int nr)$/;"	f
fn	kernel/sched.c	/^	void (*fn)();$/;"	m	struct:timer_list	file:
free_block	fs/bitmap.c	/^void free_block(int dev, int block)$/;"	f
free_bucket_desc	lib/malloc.c	/^struct bucket_desc *free_bucket_desc = (struct bucket_desc *) 0;$/;"	v	typeref:struct:bucket_desc
free_dind	fs/truncate.c	/^static void free_dind(int dev,int block)$/;"	f	file:
free_ind	fs/truncate.c	/^static void free_ind(int dev,int block)$/;"	f	file:
free_inode	fs/bitmap.c	/^void free_inode(struct m_inode * inode)$/;"	f
free_list	fs/buffer.c	/^static struct buffer_head * free_list;$/;"	v	typeref:struct:buffer_head	file:
free_page	mm/memory.c	/^void free_page(unsigned long addr)$/;"	f
free_page_tables	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	f
free_s	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	f
free_super	fs/super.c	/^static void free_super(struct super_block * sb)$/;"	f	file:
freeptr	lib/malloc.c	/^	void			*freeptr;$/;"	m	struct:bucket_desc	file:
gdt	boot/setup.s	/^gdt:$/;"	l
gdt_48	boot/setup.s	/^gdt_48:$/;"	l
gdt_descr	boot/head.s	/^gdt_descr:$/;"	l
get_dir	fs/namei.c	/^static struct m_inode * get_dir(const char * pathname)$/;"	f	file:
get_ds	include/asm/segment.h	/^extern inline unsigned long get_ds() $/;"	f
get_empty_inode	fs/inode.c	/^struct m_inode * get_empty_inode(void)$/;"	f
get_empty_page	mm/memory.c	/^void get_empty_page(unsigned long address)$/;"	f
get_free_page	mm/memory.c	/^unsigned long get_free_page(void)$/;"	f
get_fs	include/asm/segment.h	/^extern inline unsigned long get_fs() $/;"	f
get_fs_byte	include/asm/segment.h	/^extern inline unsigned char get_fs_byte(const char * addr)$/;"	f
get_fs_long	include/asm/segment.h	/^extern inline unsigned long get_fs_long(const unsigned long *addr)$/;"	f
get_fs_word	include/asm/segment.h	/^extern inline unsigned short get_fs_word(const unsigned short *addr)$/;"	f
get_hash_table	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	f
get_new	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	f	file:
get_pipe_inode	fs/inode.c	/^struct m_inode * get_pipe_inode(void)$/;"	f
get_seg_byte	kernel/traps.c	/^#define get_seg_byte(/;"	d	file:
get_seg_long	kernel/traps.c	/^#define get_seg_long(/;"	d	file:
get_super	fs/super.c	/^struct super_block * get_super(int dev)$/;"	f
getblk	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	f
go	boot/bootsect.s	/^go:	mov	ax,cs$/;"	l
hash	fs/buffer.c	/^#define hash(/;"	d	file:
hash_table	fs/buffer.c	/^struct buffer_head * hash_table[NR_HASH];$/;"	v	typeref:struct:buffer_head
head	boot/bootsect.s	/^head:	.word 0			! current head$/;"	l
idt_48	boot/setup.s	/^idt_48:$/;"	l
idt_descr	boot/head.s	/^idt_descr:$/;"	l
iget	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	f
ignore_int	boot/head.s	/^ignore_int:$/;"	l
inb	include/asm/io.h	/^#define inb(/;"	d
inb_p	include/asm/io.h	/^#define inb_p(/;"	d
init	init/main.c	/^void init(void)$/;"	f
init_bucket_desc	lib/malloc.c	/^static inline void init_bucket_desc()$/;"	f	file:
init_task	kernel/sched.c	/^static union task_union init_task = {INIT_TASK,};$/;"	v	typeref:union:task_union	file:
inline	lib/string.c	/^#define inline$/;"	d	file:
inode_table	fs/inode.c	/^struct m_inode inode_table[NR_INODE]={{0,},};$/;"	v	typeref:struct:m_inode
insert_into_queues	fs/buffer.c	/^static inline void insert_into_queues(struct buffer_head * bh)$/;"	f	file:
int_msg	boot/head.s	/^int_msg:$/;"	l
interruptible_sleep_on	kernel/sched.c	/^void interruptible_sleep_on(struct task_struct **p)$/;"	f
invalidate	mm/memory.c	/^#define invalidate(/;"	d	file:
invalidate_buffers	fs/buffer.c	/^void inline invalidate_buffers(int dev)$/;"	f
invalidate_inodes	fs/inode.c	/^void invalidate_inodes(int dev)$/;"	f
ioctl_ptr	fs/ioctl.c	/^typedef int (*ioctl_ptr)(int dev,int cmd,int arg);$/;"	t	file:
ioctl_table	fs/ioctl.c	/^static ioctl_ptr ioctl_table[]={$/;"	v	file:
iput	fs/inode.c	/^void iput(struct m_inode * inode)$/;"	f
iret	include/asm/system.h	/^#define iret(/;"	d
is_digit	kernel/vsprintf.c	/^#define is_digit(/;"	d	file:
is_disk1	boot/setup.s	/^is_disk1:$/;"	l
isalnum	include/ctype.h	/^#define isalnum(/;"	d
isalpha	include/ctype.h	/^#define isalpha(/;"	d
isascii	include/ctype.h	/^#define isascii(/;"	d
iscntrl	include/ctype.h	/^#define iscntrl(/;"	d
isdigit	include/ctype.h	/^#define isdigit(/;"	d
isgraph	include/ctype.h	/^#define isgraph(/;"	d
islower	include/ctype.h	/^#define islower(/;"	d
isprint	include/ctype.h	/^#define isprint(/;"	d
ispunct	include/ctype.h	/^#define ispunct(/;"	d
isspace	include/ctype.h	/^#define isspace(/;"	d
isupper	include/ctype.h	/^#define isupper(/;"	d
isxdigit	include/ctype.h	/^#define isxdigit(/;"	d
jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	struct:timer_list	file:
jiffies	kernel/sched.c	/^long volatile jiffies=0;$/;"	v
kernel_mktime	kernel/mktime.c	/^long kernel_mktime(struct tm * tm)$/;"	f
kill_motor	boot/bootsect.s	/^kill_motor:$/;"	l
kill_session	kernel/exit.c	/^static void kill_session(void)$/;"	f	file:
l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	struct:flock
l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock
l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	struct:flock
l_type	include/fcntl.h	/^	short l_type;$/;"	m	struct:flock
l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	struct:flock
last_pid	kernel/fork.c	/^long last_pid=0;$/;"	v
last_task_used_math	kernel/sched.c	/^struct task_struct *last_task_used_math = NULL;$/;"	v	typeref:struct:task_struct
load_setup	boot/bootsect.s	/^load_setup:$/;"	l
lock_inode	fs/inode.c	/^static inline void lock_inode(struct m_inode * inode)$/;"	f	file:
lock_super	fs/super.c	/^static void lock_super(struct super_block * sb)$/;"	f	file:
main	init/main.c	/^void main(void)		\/* This really IS void, no error here. *\/$/;"	f
main	tools/build.c	/^int main(int argc, char ** argv)$/;"	f
main_memory_start	init/main.c	/^static long main_memory_start = 0;$/;"	v	file:
malloc	lib/malloc.c	/^void *malloc(unsigned int len)$/;"	f
match	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	f	file:
math_state_restore	kernel/sched.c	/^void math_state_restore()$/;"	f
mem_init	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	f
mem_map	mm/memory.c	/^static unsigned char mem_map [ PAGING_PAGES ] = {0,};$/;"	v	file:
memchr	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	f
memcmp	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	f
memcpy	include/asm/memory.h	/^#define memcpy(/;"	d
memcpy	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	f
memmove	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	f
memory_end	init/main.c	/^static long memory_end = 0;$/;"	v	file:
memset	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	f
modtime	include/utime.h	/^	time_t modtime;$/;"	m	struct:utimbuf
moff_timer	kernel/sched.c	/^static int moff_timer[4]={0,0,0,0};$/;"	v	file:
mon_timer	kernel/sched.c	/^static int  mon_timer[4]={0,0,0,0};$/;"	v	file:
month	kernel/mktime.c	/^static int month[12] = {$/;"	v	file:
mount_root	fs/super.c	/^void mount_root(void)$/;"	f
move_to_user_mode	include/asm/system.h	/^#define move_to_user_mode(/;"	d
msg1	boot/bootsect.s	/^msg1:$/;"	l
n_desc	include/a.out.h	/^  short n_desc;$/;"	m	struct:nlist
n_name	include/a.out.h	/^    char *n_name;$/;"	m	union:nlist::__anon1
n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	union:nlist::__anon1	typeref:struct:nlist::__anon1::nlist
n_other	include/a.out.h	/^  char n_other;$/;"	m	struct:nlist
n_strx	include/a.out.h	/^    long n_strx;$/;"	m	union:nlist::__anon1
n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	struct:nlist
n_un	include/a.out.h	/^  } n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon1
n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	struct:nlist
namei	fs/namei.c	/^struct m_inode * namei(const char * pathname)$/;"	f
new_block	fs/bitmap.c	/^int new_block(int dev)$/;"	f
new_inode	fs/bitmap.c	/^struct m_inode * new_inode(int dev)$/;"	f
next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	struct:timer_list	typeref:struct:timer_list::timer_list	file:
next	lib/malloc.c	/^	struct bucket_desc	*next;$/;"	m	struct:bucket_desc	typeref:struct:bucket_desc::bucket_desc	file:
next_timer	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	typeref:struct:timer_list	file:
nlist	include/a.out.h	/^struct nlist {$/;"	s
no_disk1	boot/setup.s	/^no_disk1:$/;"	l
no_error_code	kernel/asm.s	/^no_error_code:$/;"	l
nop	include/asm/system.h	/^#define nop(/;"	d
nr_system_calls	kernel/system_call.s	/^nr_system_calls = 72$/;"	d
number	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	f	file:
offsetof	include/stddef.h	/^#define offsetof(/;"	d
ok1_read	boot/bootsect.s	/^ok1_read:$/;"	l
ok2_read	boot/bootsect.s	/^ok2_read:$/;"	l
ok3_read	boot/bootsect.s	/^ok3_read:$/;"	l
ok4_read	boot/bootsect.s	/^ok4_read:$/;"	l
ok_load_setup	boot/bootsect.s	/^ok_load_setup:$/;"	l
oom	mm/memory.c	/^static inline volatile void oom(void)$/;"	f	file:
open	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	f
open_namei	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	f
outb	include/asm/io.h	/^#define outb(/;"	d
outb_p	include/asm/io.h	/^#define outb_p(/;"	d
page	lib/malloc.c	/^	void			*page;$/;"	m	struct:bucket_desc	file:
panic	kernel/panic.c	/^volatile void panic(const char * s)$/;"	f
permission	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	f	file:
pg0	boot/head.s	/^pg0:$/;"	l
pg1	boot/head.s	/^pg1:$/;"	l
pg2	boot/head.s	/^pg2:$/;"	l
pg3	boot/head.s	/^pg3:$/;"	l
pop	boot/bootsect.s	/^	pop dx$/;"	d
printbuf	init/main.c	/^static char printbuf[1024];$/;"	v	file:
printf	init/main.c	/^static int printf(const char *fmt, ...)$/;"	f	file:
printk	kernel/printk.c	/^int printk(const char *fmt, ...)$/;"	f
priority	kernel/system_call.s	/^priority = 8$/;"	d
ptrdiff_t	include/stddef.h	/^typedef long ptrdiff_t;$/;"	t
push	boot/bootsect.s	/^	push dx$/;"	d
put_fs_byte	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	f
put_fs_long	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	f
put_fs_word	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	f
put_page	mm/memory.c	/^unsigned long put_page(unsigned long page,unsigned long address)$/;"	f
put_super	fs/super.c	/^void put_super(int dev)$/;"	f
r_address	include/a.out.h	/^  int r_address;$/;"	m	struct:relocation_info
r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	struct:relocation_info
r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	struct:relocation_info
r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	struct:relocation_info
r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	struct:relocation_info
r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	struct:relocation_info
read_inode	fs/inode.c	/^static void read_inode(struct m_inode * inode)$/;"	f	file:
read_it	boot/bootsect.s	/^read_it:$/;"	l
read_pipe	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	f
read_super	fs/super.c	/^static struct super_block * read_super(int dev)$/;"	f	file:
read_track	boot/bootsect.s	/^read_track:$/;"	l
refcnt	lib/malloc.c	/^	unsigned short		refcnt;$/;"	m	struct:bucket_desc	file:
release	kernel/exit.c	/^void release(struct task_struct * p)$/;"	f
relocation_info	include/a.out.h	/^struct relocation_info$/;"	s
remove_from_queues	fs/buffer.c	/^static inline void remove_from_queues(struct buffer_head * bh)$/;"	f	file:
reschedule	kernel/system_call.s	/^reschedule:$/;"	l
ret_from_sys_call	kernel/system_call.s	/^ret_from_sys_call:$/;"	l
root_defined	boot/bootsect.s	/^root_defined:$/;"	l
root_dev	boot/bootsect.s	/^root_dev:$/;"	l
rp_read	boot/bootsect.s	/^rp_read:$/;"	l
rp_sidt	boot/head.s	/^rp_sidt:$/;"	l
rw_char	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	f
rw_kmem	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_mem	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_memory	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	f	file:
rw_port	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_ram	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	f	file:
rw_tty	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	f	file:
rw_ttyx	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	f	file:
s	Makefile	/^	dd bs=8192 if=Image of=\/dev\/PS0$/;"	m
sa_flags	include/signal.h	/^	int sa_flags;$/;"	m	struct:sigaction
sa_flags	kernel/system_call.s	/^sa_flags = 8$/;"	d
sa_handler	include/signal.h	/^	void (*sa_handler)(int);$/;"	m	struct:sigaction
sa_handler	kernel/system_call.s	/^sa_handler = 0$/;"	d
sa_mask	include/signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction
sa_mask	kernel/system_call.s	/^sa_mask = 4$/;"	d
sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);$/;"	m	struct:sigaction
sa_restorer	kernel/system_call.s	/^sa_restorer = 12$/;"	d
save_old	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	f	file:
sched_init	kernel/sched.c	/^void sched_init(void)$/;"	f
schedule	kernel/sched.c	/^void schedule(void)$/;"	f
sectors	boot/bootsect.s	/^sectors:$/;"	l
send_sig	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	f	file:
set_bit	fs/bitmap.c	/^#define set_bit(/;"	d	file:
set_bit	fs/super.c	/^#define set_bit(/;"	d	file:
set_fs	include/asm/segment.h	/^extern inline void set_fs(unsigned long val)$/;"	f
set_intr_gate	include/asm/system.h	/^#define set_intr_gate(/;"	d
set_ldt_desc	include/asm/system.h	/^#define set_ldt_desc(/;"	d
set_system_gate	include/asm/system.h	/^#define set_system_gate(/;"	d
set_trap_gate	include/asm/system.h	/^#define set_trap_gate(/;"	d
set_tss_desc	include/asm/system.h	/^#define set_tss_desc(/;"	d
setup_gdt	boot/head.s	/^setup_gdt:$/;"	l
setup_idt	boot/head.s	/^setup_idt:$/;"	l
setup_paging	boot/head.s	/^setup_paging:$/;"	l
share_page	mm/memory.c	/^static int share_page(unsigned long address)$/;"	f	file:
show_stat	kernel/sched.c	/^void show_stat(void)$/;"	f
show_task	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	f
sig_atomic_t	include/signal.h	/^typedef int sig_atomic_t;$/;"	t
sigaction	include/signal.h	/^struct sigaction {$/;"	s
sigaction	kernel/system_call.s	/^sigaction = 16		# MUST be 16 (=len of sigaction)$/;"	d
signal	kernel/system_call.s	/^signal	= 12$/;"	d
sigset_t	include/signal.h	/^typedef unsigned int sigset_t;		\/* 32 bits *\/$/;"	t
size	lib/malloc.c	/^	int			size;$/;"	m	struct:_bucket_dir	file:
size_t	include/stddef.h	/^typedef unsigned long size_t;$/;"	t
size_t	include/string.h	/^typedef unsigned int size_t;$/;"	t
size_t	include/time.h	/^typedef unsigned int size_t;$/;"	t
skip_atoi	kernel/vsprintf.c	/^static int skip_atoi(const char **s)$/;"	f	file:
sleep_on	kernel/sched.c	/^void sleep_on(struct task_struct **p)$/;"	f
speed_t	include/termios.h	/^typedef int speed_t;$/;"	t
sread	boot/bootsect.s	/^sread:	.word 1+SETUPLEN	! sectors read of current track$/;"	l
stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	union:task_union	file:
stack_start	kernel/sched.c	/^	} stack_start = { & user_stack [PAGE_SIZE>>2] , 0x10 };$/;"	v	typeref:struct:__anon2
start	boot/bootsect.s	/^start:$/;"	l
start	boot/setup.s	/^start:$/;"	l
start_buffer	fs/buffer.c	/^struct buffer_head * start_buffer = (struct buffer_head *) &end;$/;"	v	typeref:struct:buffer_head
startup_32	boot/head.s	/^startup_32:$/;"	l
startup_time	kernel/sched.c	/^long startup_time=0;$/;"	v
state	kernel/system_call.s	/^state	= 0		# these are offsets into the task-struct.$/;"	d
sti	include/asm/system.h	/^#define sti(/;"	d
strcat	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	f
strchr	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	f
strcmp	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	f
strcpy	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	f
strcspn	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	f
strlen	include/string.h	/^extern inline int strlen(const char * s)$/;"	f
strncat	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	f
strncmp	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	f
strncpy	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	f
strpbrk	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	f
strrchr	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	f
strspn	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	f
strstr	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	f
strtok	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	f
super_block	fs/super.c	/^struct super_block super_block[NR_SUPER];$/;"	v	typeref:struct:super_block
sync_dev	fs/buffer.c	/^int sync_dev(int dev)$/;"	f
sync_inodes	fs/inode.c	/^void sync_inodes(void)$/;"	f
sys_access	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	f
sys_acct	kernel/sys.c	/^int sys_acct()$/;"	f
sys_alarm	kernel/sched.c	/^int sys_alarm(long seconds)$/;"	f
sys_break	kernel/sys.c	/^int sys_break()$/;"	f
sys_brk	kernel/sys.c	/^int sys_brk(unsigned long end_data_seg)$/;"	f
sys_chdir	fs/open.c	/^int sys_chdir(const char * filename)$/;"	f
sys_chmod	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	f
sys_chown	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	f
sys_chroot	fs/open.c	/^int sys_chroot(const char * filename)$/;"	f
sys_close	fs/open.c	/^int sys_close(unsigned int fd)$/;"	f
sys_creat	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	f
sys_dup	fs/fcntl.c	/^int sys_dup(unsigned int fildes)$/;"	f
sys_dup2	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	f
sys_exit	kernel/exit.c	/^int sys_exit(int error_code)$/;"	f
sys_fcntl	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f
sys_fstat	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	f
sys_ftime	kernel/sys.c	/^int sys_ftime()$/;"	f
sys_getegid	kernel/sched.c	/^int sys_getegid(void)$/;"	f
sys_geteuid	kernel/sched.c	/^int sys_geteuid(void)$/;"	f
sys_getgid	kernel/sched.c	/^int sys_getgid(void)$/;"	f
sys_getpgrp	kernel/sys.c	/^int sys_getpgrp(void)$/;"	f
sys_getpid	kernel/sched.c	/^int sys_getpid(void)$/;"	f
sys_getppid	kernel/sched.c	/^int sys_getppid(void)$/;"	f
sys_getuid	kernel/sched.c	/^int sys_getuid(void)$/;"	f
sys_gtty	kernel/sys.c	/^int sys_gtty()$/;"	f
sys_ioctl	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f
sys_kill	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	f
sys_link	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	f
sys_lock	kernel/sys.c	/^int sys_lock()$/;"	f
sys_lseek	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	f
sys_mkdir	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	f
sys_mknod	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	f
sys_mount	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	f
sys_mpx	kernel/sys.c	/^int sys_mpx()$/;"	f
sys_nice	kernel/sched.c	/^int sys_nice(long increment)$/;"	f
sys_open	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	f
sys_pause	kernel/sched.c	/^int sys_pause(void)$/;"	f
sys_phys	kernel/sys.c	/^int sys_phys()$/;"	f
sys_pipe	fs/pipe.c	/^int sys_pipe(unsigned long * fildes)$/;"	f
sys_prof	kernel/sys.c	/^int sys_prof()$/;"	f
sys_ptrace	kernel/sys.c	/^int sys_ptrace()$/;"	f
sys_read	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	f
sys_rename	kernel/sys.c	/^int sys_rename()$/;"	f
sys_rmdir	fs/namei.c	/^int sys_rmdir(const char * name)$/;"	f
sys_setgid	kernel/sys.c	/^int sys_setgid(int gid)$/;"	f
sys_setpgid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	f
sys_setregid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	f
sys_setreuid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	f
sys_setsid	kernel/sys.c	/^int sys_setsid(void)$/;"	f
sys_setuid	kernel/sys.c	/^int sys_setuid(int uid)$/;"	f
sys_sgetmask	kernel/signal.c	/^int sys_sgetmask()$/;"	f
sys_sigaction	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	f
sys_signal	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	f
sys_ssetmask	kernel/signal.c	/^int sys_ssetmask(int newmask)$/;"	f
sys_stat	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	f
sys_stime	kernel/sys.c	/^int sys_stime(long * tptr)$/;"	f
sys_stty	kernel/sys.c	/^int sys_stty()$/;"	f
sys_sync	fs/buffer.c	/^int sys_sync(void)$/;"	f
sys_time	kernel/sys.c	/^int sys_time(long * tloc)$/;"	f
sys_times	kernel/sys.c	/^int sys_times(struct tms * tbuf)$/;"	f
sys_ulimit	kernel/sys.c	/^int sys_ulimit()$/;"	f
sys_umask	kernel/sys.c	/^int sys_umask(int mask)$/;"	f
sys_umount	fs/super.c	/^int sys_umount(char * dev_name)$/;"	f
sys_uname	kernel/sys.c	/^int sys_uname(struct utsname * name)$/;"	f
sys_unlink	fs/namei.c	/^int sys_unlink(const char * name)$/;"	f
sys_ustat	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	f
sys_utime	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	f
sys_waitpid	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	f
sys_write	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	f
task	kernel/sched.c	/^	struct task_struct task;$/;"	m	union:task_union	typeref:struct:task_union::task_struct	file:
task	kernel/sched.c	/^struct task_struct * task[NR_TASKS] = {&(init_task.task), };$/;"	v	typeref:struct:task_struct
task_union	kernel/sched.c	/^union task_union {$/;"	u	file:
tell_father	kernel/exit.c	/^static void tell_father(int pid)$/;"	f	file:
termio	include/termios.h	/^struct termio {$/;"	s
termios	include/termios.h	/^struct termios {$/;"	s
ticks_to_floppy_on	kernel/sched.c	/^int ticks_to_floppy_on(unsigned int nr)$/;"	f
time_init	init/main.c	/^static void time_init(void)$/;"	f	file:
time_t	include/time.h	/^typedef long time_t;$/;"	t
timer_list	kernel/sched.c	/^static struct timer_list {$/;"	s	file:
timer_list	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	typeref:struct:timer_list	file:
tm	include/time.h	/^struct tm {$/;"	s
tm_hour	include/time.h	/^	int tm_hour;$/;"	m	struct:tm
tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	struct:tm
tm_mday	include/time.h	/^	int tm_mday;$/;"	m	struct:tm
tm_min	include/time.h	/^	int tm_min;$/;"	m	struct:tm
tm_mon	include/time.h	/^	int tm_mon;$/;"	m	struct:tm
tm_sec	include/time.h	/^	int tm_sec;$/;"	m	struct:tm
tm_wday	include/time.h	/^	int tm_wday;$/;"	m	struct:tm
tm_yday	include/time.h	/^	int tm_yday;$/;"	m	struct:tm
tm_year	include/time.h	/^	int tm_year;$/;"	m	struct:tm
toascii	include/ctype.h	/^#define toascii(/;"	d
tolower	include/ctype.h	/^#define tolower(/;"	d
toupper	include/ctype.h	/^#define toupper(/;"	d
track	boot/bootsect.s	/^track:	.word 0			! current track$/;"	l
trap_init	kernel/traps.c	/^void trap_init(void)$/;"	f
truncate	fs/truncate.c	/^void truncate(struct m_inode * inode)$/;"	f
try_to_share	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	f	file:
un_wp_page	mm/memory.c	/^void un_wp_page(unsigned long * table_entry)$/;"	f
undef_root	boot/bootsect.s	/^undef_root:$/;"	l
unlock_inode	fs/inode.c	/^static inline void unlock_inode(struct m_inode * inode)$/;"	f	file:
usage	tools/build.c	/^void usage(void)$/;"	f
user_stack	kernel/sched.c	/^long user_stack [ PAGE_SIZE>>2 ] ;$/;"	v
utimbuf	include/utime.h	/^struct utimbuf {$/;"	s
va_arg	include/stdarg.h	/^#define va_arg(/;"	d
va_end	include/stdarg.h	/^#define va_end(/;"	d
va_list	include/stdarg.h	/^typedef char *va_list;$/;"	t
va_start	include/stdarg.h	/^#define va_start(/;"	d
verify_area	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	f
vsprintf	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f
wait	lib/wait.c	/^pid_t wait(int * wait_stat)$/;"	f
wait_motor	kernel/sched.c	/^static struct task_struct * wait_motor[4] = {NULL,NULL,NULL,NULL};$/;"	v	typeref:struct:task_struct	file:
wait_on_buffer	fs/buffer.c	/^static inline void wait_on_buffer(struct buffer_head * bh)$/;"	f	file:
wait_on_inode	fs/inode.c	/^static inline void wait_on_inode(struct m_inode * inode)$/;"	f	file:
wait_on_super	fs/super.c	/^static void wait_on_super(struct super_block * sb)$/;"	f	file:
wake_up	kernel/sched.c	/^void wake_up(struct task_struct **p)$/;"	f
winsize	include/termios.h	/^struct winsize {$/;"	s
write_inode	fs/inode.c	/^static void write_inode(struct m_inode * inode)$/;"	f	file:
write_pipe	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	f
write_verify	mm/memory.c	/^void write_verify(unsigned long address)$/;"	f
ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	struct:winsize
ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	struct:winsize
ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	struct:winsize
ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	struct:winsize
